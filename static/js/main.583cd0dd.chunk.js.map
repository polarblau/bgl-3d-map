{"version":3,"sources":["Map.module.css","Map.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","mapboxgl","accessToken","HOME","Map","mapContainer","useRef","map","useState","lng","lat","zoom","bearing","setBearing","pitch","setPitch","useEffect","current","container","style","center","on","addSource","setTerrain","addLayer","Marker","setLngLat","addTo","Card","className","styles","controlsContainer","CardContent","Typography","gutterBottom","Slider","defaultValue","min","max","onChange","event","value","ref","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,aAAe,0BAA0B,kBAAoB,iC,0MCS/EC,IAASC,YAAc,2FAEvB,IAAMC,EACC,mBADDA,EAEC,kBAsFQC,MAnFf,WACE,IAAMC,EAAeC,iBAAO,MACtBC,EAAMD,iBAAO,MACnB,EAAsBE,mBAASL,GAA/B,mBAAOM,EAAP,KACA,GADA,KACsBD,mBAASL,IAA/B,mBAAOO,EAAP,KACA,GADA,KACwBF,mBAAS,KAAjC,mBAAOG,EAAP,KACA,GADA,KAC8BH,mBAAS,KAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KACA,EAA0BL,mBAAS,IAAnC,mBAAOM,EAAP,KAAcC,EAAd,KAwDA,OAtDAC,qBAAU,WACJT,EAAIU,UAERV,EAAIU,QAAU,IAAIhB,IAASG,IAAb,aACZc,UAAWb,EAAaY,QACxBE,MAAO,qCACPC,OAAQ,CAACX,EAAKC,GACdC,KAAMA,EACNG,MAAOA,EACPF,QAASA,GANG,QAOL,oEAIXI,qBAAU,WACHT,EAAIU,SAETV,EAAIU,QAAQI,GAAG,QAAQ,WACrBd,EAAIU,QAAQK,UAAU,aAAc,CAClC,KAAQ,aACR,IAAO,wCACP,SAAY,IACZ,QAAW,KAGbf,EAAIU,QAAQM,WAAW,CAAE,OAAU,aAAc,aAAgB,IAGjEhB,EAAIU,QAAQO,SAAS,CACnB,GAAM,MACN,KAAQ,MACR,MAAS,CACP,WAAY,aACZ,qBAAsB,CAAC,EAAK,GAC5B,+BAAgC,OAIpC,IAAIvB,IAASwB,QACVC,UAAU,CAACvB,EAAUA,IACrBwB,MAAMpB,EAAIU,eAef,qCACE,cAACW,EAAA,EAAD,CAAMC,UAAWC,IAAOC,kBAAxB,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,cAAY,EAAxB,qBAGA,cAACC,EAAA,EAAD,CAAQC,aAAc,GAAIC,IAAK,EAAGC,IAAK,IAAKC,SAjB9B,SAACC,EAAOC,GAC5B5B,EAAW4B,GACXlC,EAAIU,QAAQJ,WAAWD,MAgBjB,cAACqB,EAAA,EAAD,CAAYC,cAAY,EAAxB,mBAGA,cAACC,EAAA,EAAD,CAAQC,aAAc,GAAIC,IAAK,EAAGC,IAAK,GAAIC,SAhB/B,SAACC,EAAOC,GAC1B1B,EAAS0B,GACTlC,EAAIU,QAAQF,SAASD,WAiBnB,qBAAK4B,IAAKrC,EAAcwB,UAAWC,IAAOzB,mBCtFjCsC,MANf,WACE,OACE,cAAC,EAAD,KCQWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.583cd0dd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mapContainer\":\"Map_mapContainer___YdFv\",\"controlsContainer\":\"Map_controlsContainer__wloTQ\"};","import React, { useRef, useEffect, useState } from 'react'\nimport mapboxgl from 'mapbox-gl'\nimport Typography from '@material-ui/core/Typography'\nimport Slider from '@material-ui/core/Slider'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\n\nimport styles from './Map.module.css'\nimport 'mapbox-gl/dist/mapbox-gl.css'\n\nmapboxgl.accessToken = 'pk.eyJ1IjoiZnBsYW5rIiwiYSI6ImNrZzNobHI5dDAwZ3Yyem5qZ2ZjcWV5eTQifQ.2pfbEjS1qK2_T50pnuHXYQ'\n\nconst HOME = {\n  lng: 12.877465129156315,\n  lat: 47.72748263181004\n}\n\nfunction Map() {\n  const mapContainer = useRef(null)\n  const map = useRef(null)\n  const [lng, setLng] = useState(HOME.lng)\n  const [lat, setLat] = useState(HOME.lat)\n  const [zoom, setZoom] = useState(13)\n  const [bearing, setBearing] = useState(80)\n  const [pitch, setPitch] = useState(95)\n\n  useEffect(() => {\n    if (map.current) return\n\n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [lng, lat],\n      zoom: zoom,\n      pitch: pitch,\n      bearing: bearing,\n      style: 'mapbox://styles/mapbox-map-design/ckhqrf2tz0dt119ny6azh975y'\n    })\n  })\n\n  useEffect(() => {\n    if (!map.current) return\n\n    map.current.on('load', () => {\n      map.current.addSource('mapbox-dem', {\n        'type': 'raster-dem',\n        'url': 'mapbox://mapbox.mapbox-terrain-dem-v1',\n        'tileSize': 512,\n        'maxzoom': 14\n      });\n      // add the DEM source as a terrain layer with exaggerated height\n      map.current.setTerrain({ 'source': 'mapbox-dem', 'exaggeration': 1 });\n\n      // add a sky layer that will show when the map is highly pitched\n      map.current.addLayer({\n        'id': 'sky',\n        'type': 'sky',\n        'paint': {\n          'sky-type': 'atmosphere',\n          'sky-atmosphere-sun': [0.0, 0.0],\n          'sky-atmosphere-sun-intensity': 15\n        }\n      })\n\n      new mapboxgl.Marker()\n        .setLngLat([HOME.lng, HOME.lat])\n        .addTo(map.current)\n    })\n  })\n\n  const updateBearing = (event, value) => {\n    setBearing(value)\n    map.current.setBearing(bearing)\n  }\n\n  const updatePitch = (event, value) => {\n    setPitch(value)\n    map.current.setPitch(pitch)\n  }\n\n  return (\n    <>\n      <Card className={styles.controlsContainer}>\n        <CardContent>\n          <Typography gutterBottom>\n            Bearing\n          </Typography>\n          <Slider defaultValue={80} min={0} max={360} onChange={updateBearing} />\n          <Typography gutterBottom>\n            Pitch\n          </Typography>\n          <Slider defaultValue={40} min={0} max={85} onChange={updatePitch} />\n        </CardContent>\n      </Card>\n      <div ref={mapContainer} className={styles.mapContainer} />\n    </>\n  )\n}\n\n\nexport default Map","import Map from './Map'\n\nfunction App() {\n  return (\n    <Map />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}